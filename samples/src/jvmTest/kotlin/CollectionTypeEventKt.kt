// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: CollectionTypeEvent.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
@kotlin.jvm.JvmName("-initializecollectionTypeEvent")
public inline fun collectionTypeEvent(block: CollectionTypeEventKt.Dsl.() -> kotlin.Unit): CollectionTypeEventOuterClass.CollectionTypeEvent =
  CollectionTypeEventKt.Dsl._create(CollectionTypeEventOuterClass.CollectionTypeEvent.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `CollectionTypeEvent`
 */
public object CollectionTypeEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: CollectionTypeEventOuterClass.CollectionTypeEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: CollectionTypeEventOuterClass.CollectionTypeEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): CollectionTypeEventOuterClass.CollectionTypeEvent = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class IntegerListProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated int32 integerList = 1;`
     */
     public val integerList: com.google.protobuf.kotlin.DslList<kotlin.Int, IntegerListProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getIntegerListList()
      )
    /**
     * `repeated int32 integerList = 1;`
     * @param value The integerList to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addIntegerList")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntegerListProxy>.add(value: kotlin.Int) {
      _builder.addIntegerList(value)
    }/**
     * `repeated int32 integerList = 1;`
     * @param value The integerList to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignIntegerList")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntegerListProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * `repeated int32 integerList = 1;`
     * @param values The integerList to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllIntegerList")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntegerListProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllIntegerList(values)
    }/**
     * `repeated int32 integerList = 1;`
     * @param values The integerList to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllIntegerList")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntegerListProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * `repeated int32 integerList = 1;`
     * @param index The index to set the value at.
     * @param value The integerList to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setIntegerList")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntegerListProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setIntegerList(index, value)
    }/**
     * `repeated int32 integerList = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearIntegerList")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntegerListProxy>.clear() {
      _builder.clearIntegerList()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MapStringIntProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<string, int32> mapStringInt = 2;`
     */
     public val mapStringInt: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Int, MapStringIntProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMapStringIntMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getMapStringIntMap()
      )
    /**
     * `map<string, int32> mapStringInt = 2;`
     */
    @JvmName("putMapStringInt")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Int, MapStringIntProxy>
      .put(key: kotlin.String, value: kotlin.Int) {
         _builder.putMapStringInt(key, value)
       }
    /**
     * `map<string, int32> mapStringInt = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMapStringInt")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Int, MapStringIntProxy>
      .set(key: kotlin.String, value: kotlin.Int) {
         put(key, value)
       }
    /**
     * `map<string, int32> mapStringInt = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMapStringInt")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Int, MapStringIntProxy>
      .remove(key: kotlin.String) {
         _builder.removeMapStringInt(key)
       }
    /**
     * `map<string, int32> mapStringInt = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMapStringInt")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Int, MapStringIntProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.Int>) {
         _builder.putAllMapStringInt(map)
       }
    /**
     * `map<string, int32> mapStringInt = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMapStringInt")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Int, MapStringIntProxy>
      .clear() {
         _builder.clearMapStringInt()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun CollectionTypeEventOuterClass.CollectionTypeEvent.copy(block: CollectionTypeEventKt.Dsl.() -> kotlin.Unit): CollectionTypeEventOuterClass.CollectionTypeEvent =
  CollectionTypeEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

