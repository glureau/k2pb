// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: WithNestedEnum.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
@kotlin.jvm.JvmName("-initializewithNestedEnum")
public inline fun withNestedEnum(block: WithNestedEnumKt.Dsl.() -> kotlin.Unit): WithNestedEnumOuterClass.WithNestedEnum =
  WithNestedEnumKt.Dsl._create(WithNestedEnumOuterClass.WithNestedEnum.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `WithNestedEnum`
 */
public object WithNestedEnumKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: WithNestedEnumOuterClass.WithNestedEnum.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: WithNestedEnumOuterClass.WithNestedEnum.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): WithNestedEnumOuterClass.WithNestedEnum = _builder.build()

    /**
     * `.WithNestedEnum.NestedEnum enum = 1;`
     */
    public var enum: WithNestedEnumOuterClass.WithNestedEnum.NestedEnum
      @JvmName("getEnum")
      get() = _builder.getEnum()
      @JvmName("setEnum")
      set(value) {
        _builder.setEnum(value)
      }
    public var enumValue: kotlin.Int
      @JvmName("getEnumValue")
      get() = _builder.getEnumValue()
      @JvmName("setEnumValue")
      set(value) {
        _builder.setEnumValue(value)
      }
    /**
     * `.WithNestedEnum.NestedEnum enum = 1;`
     */
    public fun clearEnum() {
      _builder.clearEnum()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun WithNestedEnumOuterClass.WithNestedEnum.copy(block: WithNestedEnumKt.Dsl.() -> kotlin.Unit): WithNestedEnumOuterClass.WithNestedEnum =
  WithNestedEnumKt.Dsl._create(this.toBuilder()).apply { block() }._build()

