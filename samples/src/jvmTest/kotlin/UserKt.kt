// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: User.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
@kotlin.jvm.JvmName("-initializeuser")
public inline fun user(block: UserKt.Dsl.() -> kotlin.Unit): UserOuterClass.User =
  UserKt.Dsl._create(UserOuterClass.User.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `User`
 */
public object UserKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: UserOuterClass.User.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: UserOuterClass.User.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): UserOuterClass.User = _builder.build()

    /**
     * `string name = 1;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * `.Vehicle.Bike Bike = 2;`
     */
    public var bike: VehicleOuterClass.Vehicle.Bike
      @JvmName("getBike")
      get() = _builder.getBike()
      @JvmName("setBike")
      set(value) {
        _builder.setBike(value)
      }
    /**
     * `.Vehicle.Bike Bike = 2;`
     */
    public fun clearBike() {
      _builder.clearBike()
    }
    /**
     * `.Vehicle.Bike Bike = 2;`
     * @return Whether the bike field is set.
     */
    public fun hasBike(): kotlin.Boolean {
      return _builder.hasBike()
    }

    /**
     * `.Vehicle.Car Car = 3;`
     */
    public var car: VehicleOuterClass.Vehicle.Car
      @JvmName("getCar")
      get() = _builder.getCar()
      @JvmName("setCar")
      set(value) {
        _builder.setCar(value)
      }
    /**
     * `.Vehicle.Car Car = 3;`
     */
    public fun clearCar() {
      _builder.clearCar()
    }
    /**
     * `.Vehicle.Car Car = 3;`
     * @return Whether the car field is set.
     */
    public fun hasCar(): kotlin.Boolean {
      return _builder.hasCar()
    }
    public val vehicleCase: UserOuterClass.User.VehicleCase
      @JvmName("getVehicleCase")
      get() = _builder.getVehicleCase()

    public fun clearVehicle() {
      _builder.clearVehicle()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun UserOuterClass.User.copy(block: UserKt.Dsl.() -> kotlin.Unit): UserOuterClass.User =
  UserKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val UserOuterClass.UserOrBuilder.bikeOrNull: VehicleOuterClass.Vehicle.Bike?
  get() = if (hasBike()) getBike() else null

public val UserOuterClass.UserOrBuilder.carOrNull: VehicleOuterClass.Vehicle.Car?
  get() = if (hasCar()) getCar() else null

