// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: CommentedClass.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
@kotlin.jvm.JvmName("-initializecommentedClass")
public inline fun commentedClass(block: CommentedClassKt.Dsl.() -> kotlin.Unit): CommentedClassOuterClass.CommentedClass =
  CommentedClassKt.Dsl._create(CommentedClassOuterClass.CommentedClass.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 *This class has kdoc comment.
 * ```
 *
 * Protobuf type `CommentedClass`
 */
public object CommentedClassKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: CommentedClassOuterClass.CommentedClass.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: CommentedClassOuterClass.CommentedClass.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): CommentedClassOuterClass.CommentedClass = _builder.build()

    /**
     * ```
     *
     *This field has kdoc comment.
     * ```
     *
     * `string fieldWithComment = 1;`
     */
    public var fieldWithComment: kotlin.String
      @JvmName("getFieldWithComment")
      get() = _builder.getFieldWithComment()
      @JvmName("setFieldWithComment")
      set(value) {
        _builder.setFieldWithComment(value)
      }
    /**
     * ```
     *
     *This field has kdoc comment.
     * ```
     *
     * `string fieldWithComment = 1;`
     */
    public fun clearFieldWithComment() {
      _builder.clearFieldWithComment()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun CommentedClassOuterClass.CommentedClass.copy(block: CommentedClassKt.Dsl.() -> kotlin.Unit): CommentedClassOuterClass.CommentedClass =
  CommentedClassKt.Dsl._create(this.toBuilder()).apply { block() }._build()

