File: k2pb/AnnotatedClass.proto
syntax = "proto3";

message AnnotatedClass {
  int32 a = 1;
  int32 b = 4;
  string c = 3;
  string d = 5;
}

File: k2pb/WithNestClassB.proto
syntax = "proto3";

message WithNestClassB {
  WithNestClassB.NestedClass b = 1;
  message NestedClass {
    WithNestClassB.NestedClass.NestedEnum nestedEnum = 1;
    enum NestedEnum {
      A = 0;
      B = 1;
      C = 2;
    }
  }
}

File: k2pb/MultiModule.proto
syntax = "proto3";

import "DataClassFromLib.proto";

message MultiModule {
  DataClassFromLib dataClassFromLib = 1;
  string valueClassFromLib = 2;
}

File: k2pb/AbstractSubClass.proto
syntax = "proto3";

message AbstractSubClass {
  int32 foo = 1;
  string bar = 2;
}

File: k2pb/WithNestedEnum.proto
syntax = "proto3";

message WithNestedEnum {
  WithNestedEnum.NestedEnum enum = 1;
  enum NestedEnum {
    A = 0;
    B = 1;
    C = 2;
  }
}

File: k2pb/TransientField.proto
syntax = "proto3";

message TransientField {
  string fieldSerialized = 1;
}

File: k2pb/BigDecimalValueClassHolder.proto
syntax = "proto3";

message BigDecimalValueClassHolder {
  string bdValue = 1;
}

File: k2pb/DataClassFromLib.proto
syntax = "proto3";

message DataClassFromLib {
  int32 myInt = 1;
}

File: k2pb/WithNestClassA.proto
syntax = "proto3";

message WithNestClassA {
  WithNestClassA.NestedClass a = 1;
  message NestedClass {
    string nested = 1;
  }
}

File: k2pb/NativeTypeEvent.proto
syntax = "proto3";

message NativeTypeEvent {
  int32 integer = 1;
  int64 long = 2;
  float float = 3;
  double double = 4;
  string string = 5;
  int32 short = 6;
  int32 char = 7;
  bool boolean = 8;
  int32 byte = 9;
}

File: k2pb/BigDecimalHolder.proto
syntax = "proto3";

message BigDecimalHolder {
  string bd = 1;
}

File: k2pb/AbstractClass.proto
syntax = "proto3";

// Polymorphism structure for 'AbstractClass'
message AbstractClass {
  // Serial name of the class implementing the interface/sealed class.
  // (subclasses cannot be listed automatically)
  string type = 1;
  // Data to be deserialized based on the field 'type'
  bytes value = 2;
}

File: k2pb/CommonClass.proto
syntax = "proto3";

message CommonClass {
  string id = 1;
}

File: k2pb/EnumClass.proto
syntax = "proto3";

enum EnumClass {
  A = 0;
  B = 1;
  C = 2;
}

File: k2pb/FooEvent.proto
syntax = "proto3";

import "CommonClass.proto";

message FooEvent {
  CommonClass common = 1;
}

File: k2pb/ObjectClass.proto
syntax = "proto3";

message ObjectClass {
}

File: k2pb/BarEvent.proto
syntax = "proto3";

import "CommonClass.proto";

message BarEvent {
  CommonClass common = 1;
}

File: k2pb/CollectionTypeEvent.proto
syntax = "proto3";

message CollectionTypeEvent {
  repeated int32 integerList = 1;
  map<string, int32> mapStringInt = 2;
}

File: k2pb/Vehicle.proto
syntax = "proto3";

// Polymorphism structure for 'Vehicle'
message Vehicle {
  // Serial name of the class implementing the interface/sealed class.
  // Possible values are:
  // - 'Vehicle.Bike'
  // - 'Vehicle.Car'
  string type = 1;
  // Data to be deserialized based on the field 'type'
  bytes value = 2;
  message Bike {
    string brand = 1;
  }
  message Car {
    string brand = 1;
  }
}

File: k2pb/CommentedClass.proto
syntax = "proto3";

//  This class has kdoc comment.
message CommentedClass {
  //  This field has kdoc comment.
  string fieldWithComment = 1;
}

File: k2pb/User.proto
syntax = "proto3";

import "Vehicle.proto";

message User {
  string name = 1;
  Vehicle vehicle = 2;
}

